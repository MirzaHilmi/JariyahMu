openapi: 3.1.0
info:
  title: Swagger JariyahMu - OpenAPI 3.1.0
  description: |-
    JariyahMu's API Specification.
    Some useful links:
    - [JariyahMu repository](https://github.com/MirzaHilmi/JariyahMu)
    - [JariyahMu Grand Design](https://www.figma.com/file/i8vH72XjEuJAIOuQbq554z/JAMU-IBU?type=design&node-id=1-3&mode=design&t=Ggptr49h65rWjxa2-0)
  contact:
    email: exquisitemirza@student.ub.ac.id
  license:
    name: MIT
    url: https://github.com/MirzaHilmi/JariyahMu/blob/master/LICENSE
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Version 1
  - url: http://localhost:8080/api/v2
    description: Version 2
tags:
  - name: authentication
    description: Authentication mechanisms and requirements for accessing the API
  - name: social-media
    description: Operations related to social media interactions and integrations
  - name: plants
    description: Operations related to plant data, information, and management
paths:
  /auth/signup:
    post:
      tags:
        - authentication
      operationId: signupUser
      summary: User Signing up
      description: Store new user and generate JSON Web Token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                fullName:
                  description: User Full Name
                  type: string
                email:
                  description: User Email
                  type: string
                  format: email
                password:
                  description: User Password that should be at least 8 characters long
                  type: string
                  format: password
                  minLength: 8
                passwordConfirmation:
                  description: Repeated password from the `password` property
                  type: string
                  format: password
              example:
                fullName: John Smith Doe
                email: johndoe67@gmail.com
                password: 12345678
                passwordConfirmation: 12345678
              required:
                - fullName
                - email
                - password
                - passwordConfirmation
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  description: User Full Name
                  type: string
                email:
                  description: User Email
                  type: string
                  format: email
                password:
                  description: User Password that should at least 8 characters long
                  type: string
                  format: password
                  minLength: 8
                passwordConfirmation:
                  description: Repeated password from the `password` property
                  type: string
                  format: password
              example:
                fullName: John Smith Doe
                email: johndoe67@gmail.com
                password: 12345678
                passwordConfirmation: 12345678
              required:
                - fullName
                - email
                - password
                - passwordConfirmation
      responses:
        "200":
          description: Success Sign up Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: JSON Web Token generated from provided resource
                    example: |-
                      eyJhbGciOiJIUzI1N.eyJzdWIiOiIxMjM0NTY3ODkwIiw.SflKxwRJSMeKKF2QT4fwp
        "403":
          description: User already authenticated and JSON Web Token is still valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"
              example:
                code: 403
                message: Action forbidden, already authenticated
  /auth/login:
    post:
      tags:
        - authentication
      operationId: userLogIn
      summary: User Logging in
      description: Validate Identity and Generate JSON Web Token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  description: User Email
                  type: string
                  format: email
                password:
                  description: User Password that should be at least 8 characters long
                  type: string
                  format: password
                  minLength: 8
              example:
                email: johndoe67@gmail.com
                password: 12345678
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  description: User Email
                  type: string
                  format: email
                password:
                  description: User Password that should at least 8 characters long
                  type: string
                  format: password
                  minLength: 8
              example:
                fullName: John Smith Doe
                email: johndoe67@gmail.com
                password: 12345678
                passwordConfirmation: 12345678
      responses:
        "200":
          description: Success Log in Attempt
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: JSON Web Token generated from provided resource
                    example: |-
                      eyJhbGciOiJIUzI1N.eyJzdWIiOiIxMjM0NTY3ODkwIiw.SflKxwRJSMeKKF2QT4fwp
        "401":
          description: Incorrect or fraud credential
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"
              example:
                code: 401
                message: Invalid credential
        "403":
          description: User already authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"
              example:
                code: 403
                message: Action forbidden, already authenticated
components:
  schemas:
    GeneralError:
      type: object
      required:
        - code
      properties:
        code:
          type: integer
          description: HTTP Response Status Code for the Error
          format: int32
          example: [401]
        message:
          type: string
          description: |-
            The Error Response Message. 
            Defaults to the HTTP Response Status Code Message
          example: Unauthorized
        errors:
          type: array
          items:
            type: object
            properties:
              parameter:
                type: string
                description: The Parameter Name thats causing the Error
                example: passwordConfirmation
              message:
                type: string
                description: The Error Message of the corresponding Parameter
                example: Password Confirmation must be the same as the specified Password
    APIResponse:
      type: object
      required:
        - code
      properties:
        code:
          type: integer
          description: |-
            HTTP Response Status Code for the Response. 
            Ideally this schema will always be used for a Successful Request
          format: int32
          example: 200
        message:
          type: string
          description: |-
            The API Response Message. 
            Defaults to the HTTP Response Status Code Message
          example: OK
    User:
      type: object
      properties:
        id:
          type: string
          minLength: 26
          maxLength: 26
          example: 01HK6TQA7V75K1D4QS6CDK7PXY
        fullName:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: johndoe67@gmail.com
        password:
          type: string
          format: password
          example: $2a$12$Zf7NuWW8WaI.ECAiQcenSux.pc1KecPmd/io0rwJ5I4azvh1CMftC
        profilePicture:
          type: string
          description: Picture Image Path or URL
          example: https://example.com/foo.png
        createdAt:
          type: string
          format: date-time
          example: 2038-01-19 03:14:07
        updatedAt:
          type: string
          format: date-time
          example: 2038-01-19 03:14:07
    PlantPost:
      type: object
      properties:
        id:
          type: string
          minLength: 26
          maxLength: 26
          example: 01HK6TQA7V75K1D4QS6CDK7PXY
        picture:
          type: string
          description: Picture Image Path or URL
          example: https://example.com/foo.png
        type:
          type: string
          description: Plant types or common name
          example: Orange
        age:
          type: integer
          description: Plant Age
          format: int32
          example: 4
        description:
          type: string
          description: The correlated plant post description
          example: Fresh oranges we harvest this morning üçäüåø
        latitude:
          type: number
          description: Latitude value of the location geo coordinate
          format: double
          example: 38.8951
        longitude:
          type: number
          description: Longitude value of the location geo coordinate
          format: double
          example: 38.8951
        createdAt:
          type: string
          format: date-time
          example: 2038-01-19 03:14:07
        updatedAt:
          type: string
          format: date-time
          example: 2038-01-19 03:14:07
